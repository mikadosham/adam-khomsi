{"ast":null,"code":"var _jsxFileName = \"/Users/adamkhomsi/Desktop/Dev Learning/adam-khomsi/src/Components/Typewriter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Components/Typewriter.css\"; // Ensure your CSS path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Typewriter = ({\n  text,\n  typingDelay = 200\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  useEffect(() => {\n    let index = 0;\n    const typeNextChar = () => {\n      setDisplayedText(prev => prev + text.charAt(index));\n      index += 1;\n      if (index < text.length) {\n        // Random delay between 30ms and 200ms (or any range you prefer)\n        const randomDelay = Math.random() * (typingDelay - 30) + 30;\n        setTimeout(typeNextChar, randomDelay);\n      }\n    };\n    typeNextChar(); // Start typing process\n\n    return () => {\n      if (index < text.length) {\n        clearTimeout(typeNextChar);\n      }\n    };\n  }, [text, typingDelay]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"typewriter\",\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this); // Apply CSS class if needed\n};\n_s(Typewriter, \"Jd13zeE1AOcNtwxOaM+TQzFRVsM=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Typewriter","text","typingDelay","_s","displayedText","setDisplayedText","index","typeNextChar","prev","charAt","length","randomDelay","Math","random","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adamkhomsi/Desktop/Dev Learning/adam-khomsi/src/Components/Typewriter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Components/Typewriter.css\"; // Ensure your CSS path is correct\n\nconst Typewriter = ({ text, typingDelay = 200 }) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n\n  useEffect(() => {\n    let index = 0;\n    const typeNextChar = () => {\n      setDisplayedText((prev) => prev + text.charAt(index));\n      index += 1;\n      if (index < text.length) {\n        // Random delay between 30ms and 200ms (or any range you prefer)\n        const randomDelay = Math.random() * (typingDelay - 30) + 30;\n        setTimeout(typeNextChar, randomDelay);\n      }\n    };\n\n    typeNextChar(); // Start typing process\n\n    return () => {\n      if (index < text.length) {\n        clearTimeout(typeNextChar);\n      }\n    };\n  }, [text, typingDelay]);\n\n  return <p className=\"typewriter\">{displayedText}</p>; // Apply CSS class if needed\n};\n\nexport default Typewriter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,GAAG,CAAC;IACb,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBF,gBAAgB,CAAEG,IAAI,IAAKA,IAAI,GAAGP,IAAI,CAACQ,MAAM,CAACH,KAAK,CAAC,CAAC;MACrDA,KAAK,IAAI,CAAC;MACV,IAAIA,KAAK,GAAGL,IAAI,CAACS,MAAM,EAAE;QACvB;QACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIX,WAAW,GAAG,EAAE,CAAC,GAAG,EAAE;QAC3DY,UAAU,CAACP,YAAY,EAAEI,WAAW,CAAC;MACvC;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEhB,OAAO,MAAM;MACX,IAAID,KAAK,GAAGL,IAAI,CAACS,MAAM,EAAE;QACvBK,YAAY,CAACR,YAAY,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAACN,IAAI,EAAEC,WAAW,CAAC,CAAC;EAEvB,oBAAOH,OAAA;IAAGiB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAEb;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,CAAC,CAAC;AACxD,CAAC;AAAClB,EAAA,CAzBIH,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}