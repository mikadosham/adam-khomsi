{"ast":null,"code":"var _jsxFileName = \"/Users/adamkhomsi/Desktop/Dev Learning/adam-khomsi website/src/Components/Typewriter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Typewriter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Typewriter = ({\n  text,\n  baseDelay = 10\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const textareaRef = useRef(null); // Reference to the textarea\n\n  const textDivRef = useRef(null); // Reference to the div\n\n  useEffect(() => {\n    textareaRef.current.focus(); // Focus on the textarea to show the caret\n\n    if (index < text.length) {\n      const delay = baseDelay + Math.random() * 150;\n      const timer = setTimeout(() => {\n        setDisplayedText(d => d + text.charAt(index));\n        setIndex(prevIndex => prevIndex + 1);\n      }, delay);\n      return () => clearTimeout(timer);\n    }\n  }, [index, text, baseDelay]);\n  const handleUserInput = e => {\n    e.preventDefault(); // Prevent all user input, keeping the caret active\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hey, I'm Adam :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: textDivRef,\n      className: \"typewriter\",\n      contentEditable: \"false\" // Prevent the mobile keyboard from popping up\n      ,\n      style: {\n        cursor: \"text\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        minHeight: \"50px\"\n      },\n      children: displayedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Typewriter, \"0jPp5AwhayCeYZL33cD73W1RWBw=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Typewriter","text","baseDelay","_s","displayedText","setDisplayedText","index","setIndex","textareaRef","textDivRef","current","focus","length","delay","Math","random","timer","setTimeout","d","charAt","prevIndex","clearTimeout","handleUserInput","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","contentEditable","style","cursor","padding","border","minHeight","_c","$RefreshReg$"],"sources":["/Users/adamkhomsi/Desktop/Dev Learning/adam-khomsi website/src/Components/Typewriter.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Typewriter.css\";\n\nconst Typewriter = ({ text, baseDelay = 10 }) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const textareaRef = useRef(null); // Reference to the textarea\n\n  const textDivRef = useRef(null); // Reference to the div\n\n  useEffect(() => {\n    textareaRef.current.focus(); // Focus on the textarea to show the caret\n\n    if (index < text.length) {\n      const delay = baseDelay + Math.random() * 150;\n      const timer = setTimeout(() => {\n        setDisplayedText((d) => d + text.charAt(index));\n        setIndex((prevIndex) => prevIndex + 1);\n      }, delay);\n\n      return () => clearTimeout(timer);\n    }\n  }, [index, text, baseDelay]);\n\n  const handleUserInput = (e) => {\n    e.preventDefault(); // Prevent all user input, keeping the caret active\n  };\n\n  return (\n    <div>\n      <h1>Hey, I'm Adam :)</h1>\n      <div\n        ref={textDivRef}\n        className=\"typewriter\"\n        contentEditable=\"false\" // Prevent the mobile keyboard from popping up\n        style={{\n          cursor: \"text\",\n          padding: \"10px\",\n          border: \"1px solid #ccc\",\n          minHeight: \"50px\",\n        }}\n      >\n        {displayedText}\n      </div>\n    </div>\n  );\n};\n\nexport default Typewriter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMa,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElC,MAAMY,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEjCD,SAAS,CAAC,MAAM;IACdY,WAAW,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE7B,IAAIL,KAAK,GAAGL,IAAI,CAACW,MAAM,EAAE;MACvB,MAAMC,KAAK,GAAGX,SAAS,GAAGY,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MAC7C,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BZ,gBAAgB,CAAEa,CAAC,IAAKA,CAAC,GAAGjB,IAAI,CAACkB,MAAM,CAACb,KAAK,CAAC,CAAC;QAC/CC,QAAQ,CAAEa,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACxC,CAAC,EAAEP,KAAK,CAAC;MAET,OAAO,MAAMQ,YAAY,CAACL,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACV,KAAK,EAAEL,IAAI,EAAEC,SAAS,CAAC,CAAC;EAE5B,MAAMoB,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB9B,OAAA;MACE+B,GAAG,EAAErB,UAAW;MAChBsB,SAAS,EAAC,YAAY;MACtBC,eAAe,EAAC,OAAO,CAAC;MAAA;MACxBC,KAAK,EAAE;QACLC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,gBAAgB;QACxBC,SAAS,EAAE;MACb,CAAE;MAAAZ,QAAA,EAEDrB;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3CIH,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}