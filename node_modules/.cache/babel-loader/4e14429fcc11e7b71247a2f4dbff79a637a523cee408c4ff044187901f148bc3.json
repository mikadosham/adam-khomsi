{"ast":null,"code":"var _jsxFileName = \"/Users/adamkhomsi/Desktop/Dev Learning/adam-khomsi/src/Components/Typewriter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../Components/Typewriter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Typewriter = ({\n  text,\n  baseDelay = 10\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const textareaRef = useRef(null); // Reference to the textarea\n\n  useEffect(() => {\n    textareaRef.current.focus(); // Focus on the textarea to show the caret\n\n    if (index < text.length) {\n      const delay = Math.random() * (baseDelay - 1000) + 100;\n      const timer = setTimeout(() => {\n        console.log(delay);\n        setDisplayedText(d => d + text.charAt(index));\n        setIndex(index + 1);\n      }, delay);\n      return () => clearTimeout(timer);\n    }\n  }, [index, text, baseDelay]);\n  const handleUserInput = e => {\n    e.preventDefault(); // Prevent all user input, keeping the caret active\n  };\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    ref: textareaRef,\n    className: \"typewriter\",\n    value: displayedText,\n    onChange: handleUserInput,\n    onKeyDown: handleUserInput,\n    onMouseDown: e => e.preventDefault() // Prevents selection if needed\n    ,\n    style: {\n      cursor: \"text\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Typewriter, \"QcZ/ojzrgAMfWls8T+/Q3unQMtM=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Typewriter","text","baseDelay","_s","displayedText","setDisplayedText","index","setIndex","textareaRef","current","focus","length","delay","Math","random","timer","setTimeout","console","log","d","charAt","clearTimeout","handleUserInput","e","preventDefault","ref","className","value","onChange","onKeyDown","onMouseDown","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adamkhomsi/Desktop/Dev Learning/adam-khomsi/src/Components/Typewriter.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Components/Typewriter.css\";\n\nconst Typewriter = ({ text, baseDelay = 10 }) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const textareaRef = useRef(null); // Reference to the textarea\n\n  useEffect(() => {\n    textareaRef.current.focus(); // Focus on the textarea to show the caret\n\n    if (index < text.length) {\n      const delay = Math.random() * (baseDelay - 1000) + 100;\n      const timer = setTimeout(() => {\n        console.log(delay);\n        setDisplayedText((d) => d + text.charAt(index));\n        setIndex(index + 1);\n      }, delay);\n\n      return () => clearTimeout(timer);\n    }\n  }, [index, text, baseDelay]);\n\n  const handleUserInput = (e) => {\n    e.preventDefault(); // Prevent all user input, keeping the caret active\n  };\n\n  return (\n    <textarea\n      ref={textareaRef}\n      className=\"typewriter\"\n      value={displayedText}\n      onChange={handleUserInput}\n      onKeyDown={handleUserInput}\n      onMouseDown={(e) => e.preventDefault()} // Prevents selection if needed\n      style={{ cursor: \"text\" }}\n    />\n  );\n};\n\nexport default Typewriter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMa,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElCD,SAAS,CAAC,MAAM;IACdY,WAAW,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE7B,IAAIJ,KAAK,GAAGL,IAAI,CAACU,MAAM,EAAE;MACvB,MAAMC,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIZ,SAAS,GAAG,IAAI,CAAC,GAAG,GAAG;MACtD,MAAMa,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;QAClBP,gBAAgB,CAAEc,CAAC,IAAKA,CAAC,GAAGlB,IAAI,CAACmB,MAAM,CAACd,KAAK,CAAC,CAAC;QAC/CC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACrB,CAAC,EAAEM,KAAK,CAAC;MAET,OAAO,MAAMS,YAAY,CAACN,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACT,KAAK,EAAEL,IAAI,EAAEC,SAAS,CAAC,CAAC;EAE5B,MAAMoB,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEzB,OAAA;IACE0B,GAAG,EAAEjB,WAAY;IACjBkB,SAAS,EAAC,YAAY;IACtBC,KAAK,EAAEvB,aAAc;IACrBwB,QAAQ,EAAEN,eAAgB;IAC1BO,SAAS,EAAEP,eAAgB;IAC3BQ,WAAW,EAAGP,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE,CAAC;IAAA;IACxCO,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEN,CAAC;AAACjC,EAAA,CAnCIH,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}